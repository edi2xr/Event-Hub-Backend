"""empty message

Revision ID: 0ea04e4411a4
Revises: 
Create Date: 2025-10-30 22:24:53.139380

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0ea04e4411a4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subscription')
    op.drop_table('payment')
    op.drop_table('channel_events')
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.alter_column('banner_url',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.Text(),
               existing_nullable=True)

    with op.batch_alter_table('lucky_winners', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'events', ['event_id'], ['id'])

    with op.batch_alter_table('tickets', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'events', ['event_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tickets', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('lucky_winners', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.alter_column('banner_url',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)

    op.create_table('channel_events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('channel_events_pkey'))
    )
    op.create_table('payment',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.Column('mpesa_receipt_number', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('checkout_request_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED', name='paymentstatus'), autoincrement=False, nullable=True),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('payment_pkey'))
    )
    op.create_table('subscription',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED', name='paymentstatus'), autoincrement=False, nullable=True),
    sa.Column('mpesa_receipt_number', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('checkout_request_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('subscription_pkey'))
    )
    # ### end Alembic commands ###
